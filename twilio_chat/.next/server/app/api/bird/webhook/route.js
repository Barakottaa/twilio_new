/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/bird/webhook/route";
exports.ids = ["app/api/bird/webhook/route"];
exports.modules = {

/***/ "(rsc)/./app/api/bird/webhook/route.ts":
/*!***************************************!*\
  !*** ./app/api/bird/webhook/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_bird_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/bird-service */ \"(rsc)/./lib/bird-service.ts\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst dynamic = 'force-dynamic';\n// Helper function to log to file\nfunction logToFile(message) {\n    try {\n        const logDir = path__WEBPACK_IMPORTED_MODULE_3__.join(process.cwd(), '..', 'logs');\n        if (!fs__WEBPACK_IMPORTED_MODULE_2__.existsSync(logDir)) {\n            fs__WEBPACK_IMPORTED_MODULE_2__.mkdirSync(logDir, {\n                recursive: true\n            });\n        }\n        const logFile = path__WEBPACK_IMPORTED_MODULE_3__.join(logDir, 'webhook-debug.log');\n        const timestamp = new Date().toISOString();\n        fs__WEBPACK_IMPORTED_MODULE_2__.appendFileSync(logFile, `[${timestamp}] ${message}\\n`);\n    } catch (error) {\n        console.error('Failed to write to log file:', error);\n    }\n}\n// 🟢 Bird Webhook endpoint\nasync function POST(req) {\n    try {\n        logToFile('=== NEW WEBHOOK REQUEST ===');\n        const body = await req.json();\n        logToFile(`Incoming Body: ${JSON.stringify(body, null, 2)}`);\n        console.log('📩 Incoming Bird event:', JSON.stringify(body, null, 2));\n        // Handle Bird's actual payload format\n        const event = body.event;\n        const payload = body.payload;\n        // Extract contact info from the actual Bird format\n        let contact = null;\n        let postbackPayload = null;\n        if (event === 'whatsapp.inbound' && payload) {\n            // Get contact from sender\n            contact = payload.sender?.contact?.identifierValue;\n            // Check if there are actions with postback in the body.text.actions\n            if (payload.body?.text?.actions && payload.body.text.actions.length > 0) {\n                const postbackAction = payload.body.text.actions.find((action)=>action.type === 'postback');\n                if (postbackAction) {\n                    postbackPayload = postbackAction.postback?.payload;\n                }\n            }\n        }\n        console.log('🔍 Extracted data:', {\n            event,\n            contact,\n            postbackPayload\n        });\n        logToFile(`Extracted - Event: ${event}, Contact: ${contact}, Postback: ${postbackPayload}`);\n        // Handle button clicks (postbacks) and text messages\n        if (event === 'whatsapp.inbound' && contact) {\n            logToFile('Processing whatsapp.inbound event');\n            console.log('🎯 Processing webhook - event:', event, 'contact:', contact, 'postbackPayload:', postbackPayload);\n            let replyText = '';\n            let shouldConvertPdf = false;\n            // Handle button clicks (postbacks)\n            if (postbackPayload) {\n                logToFile(`Postback payload found: ${postbackPayload}`);\n                console.log('🎯 Postback payload found:', postbackPayload);\n                const normalizedPayload = postbackPayload.trim().toLowerCase();\n                logToFile(`Normalized payload: ${normalizedPayload}`);\n                console.log('Checking postbackPayload:', postbackPayload, 'normalized:', normalizedPayload);\n                if (normalizedPayload === 'pay_instapay') {\n                    logToFile('Matched: pay_instapay');\n                    replyText = 'ده رقم انستاباي 01005648997 حول عليه وابعت صورة التحويل علي رقم 01120035300';\n                } else if (normalizedPayload === 'pay_vcash') {\n                    logToFile('Matched: pay_vcash');\n                    replyText = 'ده رقم فودافون كاش 01120035300 حول عليه وابعت صورة التحويل عشان نسجل التحويل';\n                } else if (normalizedPayload === 'image') {\n                    logToFile('Matched: image - Setting up PDF conversion');\n                    shouldConvertPdf = true;\n                    replyText = 'جاري تحويل التقرير إلى صور وإرسالها لك...';\n                    console.log('🎯 Image postback detected - shouldConvertPdf:', shouldConvertPdf, 'replyText:', replyText);\n                } else {\n                    logToFile(`Unhandled postback payload: ${postbackPayload}`);\n                    console.log('Unhandled postback payload:', postbackPayload);\n                }\n            } else if (payload.body?.text?.body) {\n                const messageText = payload.body.text.body.toLowerCase();\n                if (messageText.includes('image')) {\n                    shouldConvertPdf = true;\n                    replyText = 'جاري تحويل التقرير إلى صور وإرسالها لك...';\n                }\n            }\n            // Send text reply if we have one\n            if (replyText) {\n                logToFile(`Sending text reply to ${contact}: ${replyText}`);\n                try {\n                    const result = await (0,_lib_bird_service__WEBPACK_IMPORTED_MODULE_1__.sendBirdMessage)(contact, replyText);\n                    logToFile(`Send result: ${JSON.stringify(result)}`);\n                    if (result.success) {\n                        console.log('✅ Reply sent successfully to', contact);\n                        logToFile(`✅ Reply sent successfully`);\n                    } else {\n                        console.log('⚠️ Reply failed:', result.error);\n                        logToFile(`⚠️ Reply failed: ${result.error}`);\n                        console.log('📝 Would have sent to', contact, ':', replyText);\n                    }\n                } catch (error) {\n                    logToFile(`⚠️ Exception during send: ${error}`);\n                    console.log('⚠️ Bird message send failed:', error);\n                    console.log('📝 Would have sent to', contact, ':', replyText);\n                }\n            }\n            // Convert PDF to images if requested\n            if (shouldConvertPdf) {\n                logToFile(`Starting PDF conversion for ${contact}`);\n                try {\n                    console.log('🔄 Converting PDF to images for', contact);\n                    const pdfServiceUrl = 'http://localhost:3002/pdf-to-image';\n                    logToFile(`Calling PDF service at: ${pdfServiceUrl}`);\n                    const response = await fetch(pdfServiceUrl, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            patient_number: contact,\n                            message: payload.body?.text?.body || 'image'\n                        })\n                    });\n                    if (response.ok) {\n                        const result = await response.json();\n                        logToFile(`PDF conversion response: ${JSON.stringify(result)}`);\n                        console.log('✅ PDF conversion successful:', result.message);\n                        // Send each converted image via WhatsApp\n                        if (result.images && result.images.length > 0) {\n                            logToFile(`Found ${result.images.length} images to send`);\n                            console.log(`📤 Sending ${result.images.length} images via WhatsApp`);\n                            for (const imageName of result.images){\n                                try {\n                                    // Get the full path to the image file\n                                    const imagePath = `D:\\\\Results\\\\${result.folder}\\\\images\\\\${imageName}`;\n                                    console.log(`📸 Uploading image: ${imagePath} to Bird`);\n                                    // Upload image to Bird and get media URL\n                                    const mediaUrl = await (0,_lib_bird_service__WEBPACK_IMPORTED_MODULE_1__.uploadImageToBird)(imagePath);\n                                    console.log(`📤 Got media URL from Bird: ${mediaUrl}`);\n                                    // Send the image via WhatsApp using the media URL\n                                    const imageResult = await (0,_lib_bird_service__WEBPACK_IMPORTED_MODULE_1__.sendBirdImageMessage)(contact, mediaUrl, `تقرير المعمل - صفحة ${result.images.indexOf(imageName) + 1}`);\n                                    if (imageResult.success) {\n                                        console.log(`✅ Image sent successfully: ${imageName}`);\n                                    } else {\n                                        console.log(`⚠️ Failed to send image ${imageName}:`, imageResult.error);\n                                    }\n                                } catch (imageError) {\n                                    console.log('⚠️ Failed to send image:', imageError);\n                                }\n                            }\n                        }\n                    } else {\n                        logToFile(`⚠️ PDF conversion failed: ${response.statusText}`);\n                        console.log('⚠️ PDF conversion failed:', response.statusText);\n                    }\n                } catch (error) {\n                    logToFile(`⚠️ PDF conversion error: ${error}`);\n                    console.log('⚠️ PDF conversion error:', error);\n                }\n            }\n            if (!replyText && !shouldConvertPdf) {\n                logToFile('No action configured for this message');\n                console.log('ℹ️ No action configured for this message');\n            }\n        } else {\n            logToFile(`Event not handled - Event: ${event}, hasContact: ${!!contact}, hasPostback: ${!!postbackPayload}`);\n            console.log('ℹ️ Event not handled:', {\n                event,\n                hasContact: !!contact,\n                hasPostback: !!postbackPayload\n            });\n        }\n        logToFile('=== WEBHOOK REQUEST COMPLETED ===\\n');\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    } catch (err) {\n        console.error('❌ Bird webhook error:', err.message);\n        console.error('❌ Error stack:', err.stack);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal Server Error'\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle other HTTP methods\nasync function GET() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: 'Method Not Allowed'\n    }, {\n        status: 405\n    });\n}\nasync function PUT() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: 'Method Not Allowed'\n    }, {\n        status: 405\n    });\n}\nasync function DELETE() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: 'Method Not Allowed'\n    }, {\n        status: 405\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/bird/webhook/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/bird-service.ts":
/*!*****************************!*\
  !*** ./lib/bird-service.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendBirdImageMessage: () => (/* binding */ sendBirdImageMessage),\n/* harmony export */   sendBirdMessage: () => (/* binding */ sendBirdMessage),\n/* harmony export */   sendBirdTemplateMessage: () => (/* binding */ sendBirdTemplateMessage),\n/* harmony export */   testBirdConnection: () => (/* binding */ testBirdConnection),\n/* harmony export */   uploadImageToBird: () => (/* binding */ uploadImageToBird),\n/* harmony export */   validateBirdConfig: () => (/* binding */ validateBirdConfig)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n\n// 🕊️ Bird API service for sending WhatsApp messages\nasync function sendBirdMessage(to, text) {\n    const apiKey = process.env.BIRD_API_KEY;\n    if (!apiKey) {\n        throw new Error('BIRD_API_KEY is not configured in environment variables');\n    }\n    try {\n        console.log('🕊️ Sending Bird message:', {\n            to,\n            text: text.substring(0, 50) + '...'\n        });\n        // Try the template API approach first (using workspace/channel structure)\n        const workspaceId = '2d7a1e03-25e4-401e-bf1e-0ace545673d7';\n        const channelId = '8e046034-bca7-5124-89d0-1a64c1cbe819';\n        const payload = {\n            receiver: {\n                contacts: [\n                    {\n                        identifierValue: to,\n                        identifierKey: \"phonenumber\"\n                    }\n                ]\n            },\n            body: {\n                type: \"text\",\n                text: {\n                    text: text\n                }\n            }\n        };\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`https://api.bird.com/workspaces/${workspaceId}/channels/${channelId}/messages`, payload, {\n            headers: {\n                Authorization: `AccessKey ${apiKey}`,\n                'Content-Type': 'application/json'\n            },\n            timeout: 10000\n        });\n        console.log('✅ Bird reply sent successfully:', {\n            messageId: response.data.id,\n            status: response.data.status,\n            to: to\n        });\n        return {\n            success: true,\n            messageId: response.data.id,\n            status: response.data.status,\n            data: response.data\n        };\n    } catch (error) {\n        console.error('❌ Bird send failed:', {\n            error: error.message,\n            response: error.response?.data,\n            status: error.response?.status\n        });\n        // Log the error but don't throw - let the webhook continue\n        console.log('⚠️ Bird message send failed, but webhook will continue');\n        return {\n            success: false,\n            error: error.response?.data?.message || error.message\n        };\n    }\n}\n// 🕊️ Helper to validate Bird configuration\nfunction validateBirdConfig() {\n    const apiKey = process.env.BIRD_API_KEY;\n    const whatsappNumber = process.env.BIRD_WHATSAPP_NUMBER;\n    if (!apiKey) {\n        throw new Error('BIRD_API_KEY is required in environment variables');\n    }\n    if (!whatsappNumber) {\n        console.warn('⚠️ BIRD_WHATSAPP_NUMBER not set, using default: +201100414204');\n    }\n    return {\n        apiKey: !!apiKey,\n        whatsappNumber: whatsappNumber || '+201100414204'\n    };\n}\n// 🕊️ Send template-based message via Bird API\nasync function sendBirdTemplateMessage(workspaceId, channelId, projectId, templateVersion, phoneNumber, parameters, locale = 'en') {\n    const apiKey = process.env.BIRD_API_KEY;\n    if (!apiKey) {\n        throw new Error('BIRD_API_KEY is not configured in environment variables');\n    }\n    try {\n        console.log('🕊️ Sending Bird template message:', {\n            workspaceId,\n            channelId,\n            projectId,\n            phoneNumber,\n            parametersCount: parameters.length\n        });\n        const payload = {\n            receiver: {\n                contacts: [\n                    {\n                        identifierValue: phoneNumber,\n                        identifierKey: \"phonenumber\"\n                    }\n                ]\n            },\n            template: {\n                projectId,\n                version: templateVersion,\n                locale,\n                parameters\n            }\n        };\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`https://api.bird.com/workspaces/${workspaceId}/channels/${channelId}/messages`, payload, {\n            headers: {\n                Authorization: `AccessKey ${apiKey}`,\n                'Content-Type': 'application/json'\n            },\n            timeout: 30000\n        });\n        console.log('✅ Bird template message sent successfully:', {\n            messageId: response.data.id,\n            status: response.data.status,\n            to: phoneNumber\n        });\n        return {\n            success: true,\n            messageId: response.data.id,\n            status: response.data.status,\n            data: response.data\n        };\n    } catch (error) {\n        console.error('❌ Bird template send failed:', {\n            error: error.message,\n            response: error.response?.data,\n            status: error.response?.status\n        });\n        throw new Error(`Failed to send Bird template message: ${error.response?.data?.message || error.message}`);\n    }\n}\n// 🕊️ Upload image to Bird and get media URL\nasync function uploadImageToBird(imagePath) {\n    const apiKey = process.env.BIRD_API_KEY;\n    if (!apiKey) {\n        throw new Error('BIRD_API_KEY is not configured in environment variables');\n    }\n    try {\n        console.log('🕊️ Uploading image to Bird:', imagePath);\n        const workspaceId = '2d7a1e03-25e4-401e-bf1e-0ace545673d7';\n        const channelId = '8e046034-bca7-5124-89d0-1a64c1cbe819';\n        // Step 1: Get presigned upload URL from Bird\n        const presignResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`https://api.bird.com/workspaces/${workspaceId}/channels/${channelId}/presigned-upload`, {\n            contentType: 'image/jpeg'\n        }, {\n            headers: {\n                'Authorization': `AccessKey ${apiKey}`,\n                'Content-Type': 'application/json'\n            }\n        });\n        const { uploadUrl, mediaUrl } = presignResponse.data;\n        console.log('📤 Got presigned upload URL from Bird');\n        // Step 2: Upload the image file\n        const FormData = __webpack_require__(/*! form-data */ \"(rsc)/./node_modules/form-data/lib/form_data.js\");\n        const fs = __webpack_require__(/*! fs */ \"fs\");\n        const formData = new FormData();\n        // Add all form fields from uploadFormData\n        Object.entries(presignResponse.data.uploadFormData).forEach(([key, value])=>{\n            formData.append(key, value);\n        });\n        // Add file\n        const fileStream = fs.createReadStream(imagePath);\n        formData.append('file', fileStream, {\n            filename: (__webpack_require__(/*! path */ \"path\").basename)(imagePath),\n            contentType: 'image/jpeg'\n        });\n        await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(uploadUrl, formData, {\n            headers: {\n                ...formData.getHeaders()\n            },\n            timeout: 60000\n        });\n        console.log('✅ Image uploaded to Bird successfully');\n        return mediaUrl;\n    } catch (error) {\n        console.error('❌ Bird image upload failed:', {\n            error: error.message,\n            response: error.response?.data,\n            status: error.response?.status\n        });\n        throw new Error(`Failed to upload image to Bird: ${error.response?.data?.message || error.message}`);\n    }\n}\n// 🕊️ Send image message via Bird API using media URL\nasync function sendBirdImageMessage(to, mediaUrl, caption) {\n    const apiKey = process.env.BIRD_API_KEY;\n    if (!apiKey) {\n        throw new Error('BIRD_API_KEY is not configured in environment variables');\n    }\n    try {\n        console.log('🕊️ Sending Bird image message:', {\n            to,\n            mediaUrl,\n            caption\n        });\n        const workspaceId = '2d7a1e03-25e4-401e-bf1e-0ace545673d7';\n        const channelId = '8e046034-bca7-5124-89d0-1a64c1cbe819';\n        const payload = {\n            receiver: {\n                contacts: [\n                    {\n                        identifierValue: to,\n                        identifierKey: \"phonenumber\"\n                    }\n                ]\n            },\n            body: {\n                type: \"image\",\n                image: {\n                    images: [\n                        {\n                            altText: caption || \"تقرير المختبر\",\n                            mediaUrl: mediaUrl\n                        }\n                    ]\n                }\n            }\n        };\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`https://api.bird.com/workspaces/${workspaceId}/channels/${channelId}/messages`, payload, {\n            headers: {\n                Authorization: `AccessKey ${apiKey}`,\n                'Content-Type': 'application/json'\n            },\n            timeout: 30000\n        });\n        console.log('✅ Bird image sent successfully:', {\n            messageId: response.data.id,\n            status: response.data.status,\n            to: to\n        });\n        return {\n            success: true,\n            messageId: response.data.id,\n            status: response.data.status,\n            data: response.data\n        };\n    } catch (error) {\n        console.error('❌ Bird image send failed:', {\n            error: error.message,\n            response: error.response?.data,\n            status: error.response?.status\n        });\n        return {\n            success: false,\n            error: error.response?.data?.message || error.message\n        };\n    }\n}\n// 🕊️ Test Bird API connection\nasync function testBirdConnection() {\n    try {\n        const config = validateBirdConfig();\n        console.log('🕊️ Bird configuration validated:', {\n            hasApiKey: config.apiKey,\n            whatsappNumber: config.whatsappNumber\n        });\n        // You could add a test API call here if Bird provides a test endpoint\n        return {\n            success: true,\n            message: 'Bird configuration is valid',\n            config\n        };\n    } catch (error) {\n        console.error('❌ Bird configuration test failed:', error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/bird-service.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbird%2Fwebhook%2Froute&page=%2Fapi%2Fbird%2Fwebhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbird%2Fwebhook%2Froute.ts&appDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbird%2Fwebhook%2Froute&page=%2Fapi%2Fbird%2Fwebhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbird%2Fwebhook%2Froute.ts&appDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_New_folder_twilio_new_twilio_chat_app_api_bird_webhook_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/bird/webhook/route.ts */ \"(rsc)/./app/api/bird/webhook/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/bird/webhook/route\",\n        pathname: \"/api/bird/webhook\",\n        filename: \"route\",\n        bundlePath: \"app/api/bird/webhook/route\"\n    },\n    resolvedPagePath: \"D:\\\\New folder\\\\twilio_new\\\\twilio_chat\\\\app\\\\api\\\\bird\\\\webhook\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_New_folder_twilio_new_twilio_chat_app_api_bird_webhook_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZiaXJkJTJGd2ViaG9vayUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYmlyZCUyRndlYmhvb2slMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZiaXJkJTJGd2ViaG9vayUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDTmV3JTIwZm9sZGVyJTVDdHdpbGlvX25ldyU1Q3R3aWxpb19jaGF0JTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDTmV3JTIwZm9sZGVyJTVDdHdpbGlvX25ldyU1Q3R3aWxpb19jaGF0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDMEI7QUFDdkc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkQ6XFxcXE5ldyBmb2xkZXJcXFxcdHdpbGlvX25ld1xcXFx0d2lsaW9fY2hhdFxcXFxhcHBcXFxcYXBpXFxcXGJpcmRcXFxcd2ViaG9va1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJzdGFuZGFsb25lXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2JpcmQvd2ViaG9vay9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2JpcmQvd2ViaG9va1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYmlyZC93ZWJob29rL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiRDpcXFxcTmV3IGZvbGRlclxcXFx0d2lsaW9fbmV3XFxcXHR3aWxpb19jaGF0XFxcXGFwcFxcXFxhcGlcXFxcYmlyZFxcXFx3ZWJob29rXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbird%2Fwebhook%2Froute&page=%2Fapi%2Fbird%2Fwebhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbird%2Fwebhook%2Froute.ts&appDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/axios","vendor-chunks/@opentelemetry","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/form-data","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/get-proto","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/follow-redirects","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbird%2Fwebhook%2Froute&page=%2Fapi%2Fbird%2Fwebhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbird%2Fwebhook%2Froute.ts&appDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CNew%20folder%5Ctwilio_new%5Ctwilio_chat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();