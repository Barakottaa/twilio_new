// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Provides an AI agent to suggest the most appropriate agent for chat reassignment.
 *
 * - suggestAgentReassignment - A function that suggests the best agent for reassignment.
 * - SuggestAgentReassignmentInput - The input type for the suggestAgentReassignment function.
 * - SuggestAgentReassignmentOutput - The return type for the suggestAgentReassignment function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestAgentReassignmentInputSchema = z.object({
  chatHistory: z
    .string()
    .describe('The complete chat history of the current conversation.'),
  availableAgents: z
    .array(z.string())
    .describe('A list of names of currently available agents.'),
});
export type SuggestAgentReassignmentInput = z.infer<typeof SuggestAgentReassignmentInputSchema>;

const SuggestAgentReassignmentOutputSchema = z.object({
  suggestedAgent: z
    .string()
    .describe('The name of the agent best suited to be reassigned to this chat.'),
  reason: z
    .string()
    .describe('The reasoning behind the agent reassignment suggestion.'),
});
export type SuggestAgentReassignmentOutput = z.infer<typeof SuggestAgentReassignmentOutputSchema>;

export async function suggestAgentReassignment(
  input: SuggestAgentReassignmentInput
): Promise<SuggestAgentReassignmentOutput> {
  return suggestAgentReassignmentFlow(input);
}

const suggestAgentReassignmentPrompt = ai.definePrompt({
  name: 'suggestAgentReassignmentPrompt',
  input: {schema: SuggestAgentReassignmentInputSchema},
  output: {schema: SuggestAgentReassignmentOutputSchema},
  prompt: `You are an expert customer support AI. Given a chat history and a list of available agents, you will determine the most appropriate agent to reassign the chat to.

Chat History:
{{chatHistory}}

Available Agents:
{{#each availableAgents}}- {{this}}\n{{/each}}

Consider the content of the chat history, and each agent's expertise and past performance to determine the best agent for reassignment. Pick only from the list of available agents. Reason your choice.

Response:
{{
  "suggestedAgent": "[name of agent]",
  "reason": "[reasoning for suggestion]"
}}
`,
});

const suggestAgentReassignmentFlow = ai.defineFlow(
  {
    name: 'suggestAgentReassignmentFlow',
    inputSchema: SuggestAgentReassignmentInputSchema,
    outputSchema: SuggestAgentReassignmentOutputSchema,
  },
  async input => {
    const {output} = await suggestAgentReassignmentPrompt(input);
    return output!;
  }
);
